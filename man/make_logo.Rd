% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_logo.R
\name{make_logo}
\alias{make_logo}
\title{Make Sequence Logos}
\usage{
make_logo(
  sites,
  genome.obj,
  seq.len = 24,
  ignore.strand = FALSE,
  current.start = 1,
  tsd = 5,
  n.samp = NULL,
  seed = NULL,
  return.plot = TRUE,
  wrap = FALSE,
  ...
)
}
\arguments{
\item{sites}{A SiteList object.}

\item{genome.obj}{The BSgenome object for the genome of interest.}

\item{seq.len}{The desired length of the expanded sequences.}

\item{ignore.strand}{Boolean. Whether or not to ignore strandedness when extracting sequences.
Defaults to FALSE. If TRUE, the sequence from the forward strand is returned.}

\item{current.start}{The position in the target site duplication currently described by the start coordinates in sites.
This is used internally for centering the integration site coordinates.}

\item{tsd}{The total length of the target site duplication.
This is used along with current.start for centering the integration site coordinates.}

\item{n.samp}{If not NULL, the number of sites to sample from a given dataset. This can significantly speed up processing time,
at the expense of including every site in the sequence logo.}

\item{seed}{The seed value for random sampling.}

\item{return.plot}{Boolean.
Whether or not to return logos for each dataset in sites instead of the consensus matrix.
Defaults to TRUE.}

\item{wrap}{Boolean. Used with return.plot.
Whether or not to wrap the returned plots into a single output.
When TRUE, arguments ncol and nrow can be used to format the output.}

\item{...}{Used to pass additional plotting parameters to ggseqlogo.
Examples include ncol and nrow.}
}
\value{
If return.plot = TRUE, a list of ggplot2 objects or a single ggplot2 object containing sequence logos
for the mapped integration site datasets in sites.
If return.plot = FALSE, a list of consensus matrices for each entry in sites.
}
\description{
Generates sequence logos or consensus matrices from SiteList objects.
}
\examples{
library(BSgenome.Hsapiens.UCSC.hs1)
data(sites2)
make_logo(sites = sites2,
          genome.obj = Hsapiens)

}
