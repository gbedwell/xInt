% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_random.R
\name{simulate_random}
\alias{simulate_random}
\title{Simulate Random Data}
\usage{
simulate_random(
  genome.obj,
  re.sites = NULL,
  cut.after = 1,
  n.sites,
  mean = 400,
  sd = 100,
  min.width = 25,
  max.width = 1200,
  max.bp = 150,
  iterations = 1,
  n.cores = 1,
  write.ranges = FALSE,
  write.reads = TRUE,
  prefix = NULL,
  directory.path = ".",
  compress = TRUE,
  paired = TRUE,
  collapse = FALSE,
  to.chr.ends = TRUE,
  U3 = FALSE,
  ltr.seq,
  linker.seq,
  mismatch.prob = 0.0025,
  indel.prob = 2.5e-05,
  offset = 33,
  as.fasta = FALSE,
  n.clones = 0,
  clone.fracs = 0,
  verbose = FALSE,
  chr.omit = c("chrM", "MT"),
  base.score = 40,
  noisy.scores = FALSE,
  read.name.prefix = "fragment_",
  use.frag.names = TRUE,
  clone.chroms = NULL,
  clone.positions = NULL,
  clone.strands = NULL
)
}
\arguments{
\item{genome.obj}{The BSgenome object of interest.}

\item{re.sites}{A character vector of restriction enzyme recognition sequences.}

\item{cut.after}{An integer that defines the nucleotide after which the
DNA is cleaved in the restriction enzyme recognition sequence. Defaults to 1.}

\item{n.sites}{The number of sites to generate.
Can be either a single value or a vector of values.}

\item{mean}{The target mean fragment size. Only used for random fragmentation.}

\item{sd}{The target fragment size standard deviation.
Only used for random fragmentation.}

\item{min.width}{The minimum desired fragment/read length.
Defaults to 25 bp.}

\item{max.width}{The maximum acceptable fragment length (insert size).
Defaults to 1200 bp.}

\item{max.bp}{The maximum read length.
Defaults to 150 bp.}

\item{iterations}{The number of random datasets to generate.
If > 1, the number of values given for n.sites must be 1.
In this case, random datasets consisting of the same number of sites are generated for each iteration.}

\item{n.cores}{The number of cores to use.}

\item{write.ranges}{Boolean. Whether or not to write out the coordinates of the generated random fragments.
Defaults to FALSE.}

\item{write.reads}{Boolean. Whether or not to save the generated reads as R1 and R2 fastq files.
Defaults to TRUE.}

\item{prefix}{The file prefix appended to saved files. Can be NULL, a single character value, or a vector of character values.}

\item{directory.path}{The directory path where output files will be saved.}

\item{compress}{Boolean. Whether or not to compress the output FASTA files. Defaults to TRUE.}

\item{paired}{Boolean. Whether or not to save paired-end fasta files. Defaults to TRUE.}

\item{collapse}{Boolean. Whether or not to collapse the generated fragments for each iteration
into a single object. Defaults to TRUE.}

\item{to.chr.ends}{Boolean. Whether or not to treat chromosome ends as capable of generating
potentially mappable fragments. Defaults to TRUE.}

\item{U3}{Boolean. Whether or not mapping is done from the U3 end (5' LTR relative to top-strand).
Defaults to FALSE.}

\item{ltr.seq}{The LTR sequence sequenced in the experiment, given in the 5' to 3' orientation.
Should be a character string or NULL. Must be provided.}

\item{linker.seq}{The linker sequence sequenced in the experiment, given in the 5' to 3' orientation.
Should be a character string or NULL. Must be provided.}

\item{mismatch.prob}{The NGS mismatch rate. Defaults to 0.0025.}

\item{indel.prob}{The NGS indel rate. Defaults to 2.5E-5.}

\item{offset}{The ASCII offset of the quality scores. Defaults to 33.}

\item{as.fasta}{Boolean. Whether or not to save the generated reads in FASTA format. If FALSE, reads are saved as FASTQ.
Defaults to FALSE.}

\item{n.clones}{The number of clonal sites to generate. Defaults to 0. Can be given as a list of vectors equal in length to
the prefix vector or the number of iterations.}

\item{clone.fracs}{A numeric vector defining the fraction of sites occupied by each clone. Defaults to 0. Can be given as a list of
vectors equal in length to the prefix vector or the number of iterations.
Must be of length == n.clones, all values must be between 0 and 1, and the sum of values must be <= 1.}

\item{verbose}{Boolean. Whether or not to print status updates. Defaults to FALSE.}

\item{chr.omit}{A character vector of chromosomes to omit. Defaults to c("chrM", "MT")}

\item{base.score}{The quality score value to assign to all bases. Offset is added to this value. Default 40.}

\item{noisy.scores}{Boolean. Whether or not to introduce simulated noise into quality scores. Defaults to FALSE.}

\item{read.name.prefix}{The naming prefix for read names. Defaults to "fragment_".}

\item{use.frag.names}{Boolean. Whether or not use names from the input fragment GRanges for sequence names. Defaults to TRUE.}

\item{clone.chroms}{A vector denoting the chromosome harboring each clonal site. Defaults to NULL.
If not NULL, must be of length equal to n.clones.}

\item{clone.positions}{A vector denoting the position of each clonal site. Defaults to NULL.
If not NULL, must be of length equal to n.clones.}

\item{clone.strands}{A vector denoting the strand of each clonal site. Defaults to NULL.
If not NULL, must be of length equal to n.clones.}
}
\value{
Default behavior will save paired R1 and R2 fastq files to disk.
The fragment coordinates used to generate those fastq files will be returned as a GRanges object.
}
\description{
Generate random fragments from a defined genome under experimentally matched conditions.
}
\examples{
\donttest{
library(BSgenome.Hsapiens.UCSC.hs1)
set.seed(1)

simulate_random(
  genome.obj = Hsapiens,
  re.sites = NULL,
  n.sites = 10,
  mean = 400,
  sd = 100,
  min.width = 25,
  max.distance = 1200,
  max.bp = 150,
  iterations = 1,
  write.ranges = FALSE,
  write.reads = FALSE
)

simulate_random(
  genome.obj = Hsapiens,
  re.sites = "TTAA",
  cut.after = 2,
  n.sites = 10,
  min.width = 25,
  max.distance = 1200,
  max.bp = 150,
  iterations = 1,
  write.ranges = FALSE,
  write.reads = FALSE
)
}

}
